{
  "name": "Market Mind Workspace",
  "dockerComposeFile": ["../docker-compose.yml"],
  "service": "devcontainer",
  "runServices": ["postgres", "chroma"],
  "shutdownAction": "none",
  "features": {
    "ghcr.io/devcontainers/features/node:1": {
      "version": "20"
    },
    "ghcr.io/devcontainers/features/github-cli:1": {},
    "ghcr.io/devcontainers/features/sshd:1": {}
  },
  "workspaceFolder": "/workspaces/market-mind",
  "onCreateCommand": "if [ -f /workspaces/market-mind/.aliases.sh ]; then cat /workspaces/market-mind/.aliases.sh >> ~/.bashrc; fi",
  "postCreateCommand": "bash -lc \"pip install --upgrade pip && pip install uv && cd backend && uv sync && cd ../frontend && npm install -g npm@11.6.2 && npm install\"",
  "remoteEnv": {
    "DATABASE_URL": "postgresql+psycopg://market_mind:market_mind@postgres:5432/market_mind",
    "CHROMA_PERSIST_DIRECTORY": "/data/chroma"
  },
  "customizations": {
    "vscode": {
      "settings": {
        "python.defaultInterpreterPath": "./backend/.venv/bin/python",
        "python.terminal.activateEnvironment": true,
        "editor.formatOnSave": true,
        "files.exclude": {
          "**/__pycache__": true,
          "**/.pytest_cache": true
        }
      },
      "extensions": [
        "ms-python.python",
        "ms-python.vscode-pylance",
        "ms-python.mypy-type-checker",
        "charliermarsh.ruff",
        "ms-azuretools.vscode-docker",
        "esbenp.prettier-vscode",
        "dbaeumer.vscode-eslint",
        "ms-kubernetes-tools.vscode-kubernetes-tools",
        "streetsidesoftware.code-spell-checker",
        "openai.chatgpt",
        "vscodevim.vim"
      ]
    }
  },
  "forwardPorts": [5173, 8000, 5432],
  "portsAttributes": {
    "5173": {
      "label": "Frontend"
    },
    "8000": {
      "label": "Backend API"
    },
    "5432": {
      "label": "PostgreSQL"
    }
  },
  "mounts": [
    "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind",
    "source=${localWorkspaceFolder}/,target=/app/,type=bind,consistency=cached",
    "source=${localEnv:HOME}/.codex,target=/root/.codex,type=bind,consistency=cached"
  ]
}
